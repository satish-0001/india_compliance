{
  "version": 3,
  "sources": ["../../../../../apps/india_compliance/india_compliance/public/js/components/filter_group.js", "../../../../../apps/india_compliance/india_compliance/public/js/components/data_table_manager.js", "../../../../../apps/india_compliance/india_compliance/public/js/components/set_gstin_options.js", "../../../../../apps/india_compliance/india_compliance/public/js/components/view_group.js"],
  "sourcesContent": ["frappe.provide(\"india_compliance\");\n\nindia_compliance.FILTER_OPERATORS = {\n    \"=\": (expected_value, value) => value == expected_value,\n    \"!=\": (expected_value, value) => value != expected_value,\n    \">\": (expected_value, value) => value > expected_value,\n    \"<\": (expected_value, value) => value < expected_value,\n    \">=\": (expected_value, value) => value >= expected_value,\n    \"<=\": (expected_value, value) => value <= expected_value,\n    like: (expected_value, value) => _like(expected_value, value),\n    \"not like\": (expected_value, value) => !_like(expected_value, value),\n    in: (expected_values, value) => expected_values.includes(value),\n    \"not in\": (expected_values, value) => !expected_values.includes(value),\n    is: (expected_value, value) => {\n        if (expected_value === \"set\") {\n            return !!value;\n        } else {\n            return !value;\n        }\n    },\n};\n\nFILTER_GROUP_BUTTON = $(\n    `\n    <div class=\"custom-button-group\">\n        <div class=\"filter-selector\">\n            <div class=\"btn-group\">\n                <button class=\"btn btn-default btn-sm filter-button\">\n                    <span class=\"filter-icon\">\n                        ${frappe.utils.icon(\"filter\")}\n                    </span>\n                    <span class=\"button-label hidden-xs\">\n                        ${__(\"Filter\")}\n                    <span>\n                </button>\n                <button class=\"btn btn-default btn-sm filter-x-button\" title=\"${__(\"Clear all filters\")}\">\n                    <span class=\"filter-icon\">\n                        ${frappe.utils.icon(\"filter-x\")}\n                    </span>\n                </button>\n            </div>\n        </div>\n    </div>\n    `\n)\n\nclass _Filter extends frappe.ui.Filter {\n    set_conditions_from_config() {\n        let filter_options = this.filter_list.filter_options;\n        if (filter_options) {\n            filter_options = { ...filter_options };\n            if (this.fieldname && this.fieldname !== \"name\")\n                delete filter_options.fieldname;\n\n            Object.assign(this, filter_options);\n        }\n\n        this.conditions = this.conditions.filter(\n            condition => india_compliance.FILTER_OPERATORS[condition && condition[0]]\n        );\n    }\n}\n\nindia_compliance.FilterGroup = class FilterGroup extends frappe.ui.FilterGroup {\n\n    constructor(opts) {\n        if (!opts.parent)\n            frappe.throw(__(\"india_compliance.FilterGroup: Parent element not found\"));\n\n        FILTER_GROUP_BUTTON.appendTo(opts.parent);\n\n        Object.assign(opts, {\n            filter_button: FILTER_GROUP_BUTTON.find(\".filter-button\"),\n            filter_x_button: FILTER_GROUP_BUTTON.find(\".filter-x-button\"),\n        });\n\n        super(opts);\n    }\n\n    _push_new_filter(...args) {\n        const Filter = frappe.ui.Filter;\n        try {\n            frappe.ui.Filter = _Filter;\n            return super._push_new_filter(...args);\n        } finally {\n            frappe.ui.Filter = Filter;\n        }\n    }\n\n    set_clear_all_filters_event() {\n        if (!this.filter_x_button) return;\n\n        super.set_clear_all_filters_event();\n\n        this.filter_x_button.on(\"click\", () => {\n            this.on_change();\n        });\n    }\n};\n\nfunction _like(expected_value, value) {\n    expected_value = expected_value.toLowerCase();\n    value = value.toLowerCase();\n\n    if (!expected_value.endsWith(\"%\")) return value.endsWith(expected_value.slice(1));\n\n    if (!expected_value.startsWith(\"%\"))\n        return value.startsWith(expected_value.slice(0, -1));\n\n    return value.includes(expected_value.slice(1, -1));\n}\n", "frappe.provide(\"india_compliance\");\n\nindia_compliance.DataTableManager = class DataTableManager {\n    constructor(options) {\n        Object.assign(this, options);\n        this.data = this.data || [];\n        this.make();\n    }\n\n    make() {\n        this.format_data(this.data);\n        this.make_no_data();\n        this.render_datatable();\n\n        this.columns_dict = {};\n        for (const column of this.datatable.getColumns()) {\n            const fieldname = column.field || column.id;\n            this.columns_dict[fieldname] = column;\n            this.columns_dict[fieldname].$filter_input = $(\n                `.dt-row-filter .dt-cell--col-${column.colIndex} .dt-filter`,\n                this.$datatable\n            )[0];\n        }\n    }\n\n    refresh(data, columns) {\n        this.data = data;\n        this.datatable.refresh(data, columns);\n    }\n\n    get_column(fieldname) {\n        return this.columns_dict[fieldname];\n    }\n\n    get_filter_input(fieldname) {\n        return this.get_column(fieldname).$filter_input;\n    }\n\n    make_no_data() {\n        this.$no_data =\n            this.$no_data ||\n            $('<div class=\"text-muted text-center\">No Matching Data Found!</div>');\n\n        this.$wrapper.parent().append(this.$no_data);\n\n        this.$no_data.hide();\n    }\n\n    get_dt_columns() {\n        if (!this.columns) return [];\n        return this.columns.map(this.get_dt_column);\n    }\n\n    get_dt_column(column) {\n        const docfield = {\n            options: column.options || column.doctype,\n            fieldname: column.fieldname,\n            fieldtype: column.fieldtype,\n            link_onclick: column.link_onclick,\n            precision: column.precision,\n        };\n        column.width = column.width || 100;\n\n        let compareFn = null;\n        if (docfield.fieldtype === \"Date\") {\n            compareFn = (cell, keyword) => {\n                if (!cell.content) return null;\n                if (keyword.length !== \"YYYY-MM-DD\".length) return null;\n\n                const keywordValue = frappe.datetime.user_to_obj(keyword);\n                const cellValue = frappe.datetime.str_to_obj(cell.content);\n                return [+cellValue, +keywordValue];\n            };\n        }\n\n        let format = function (value, row, column, data) {\n            if (column._value) {\n                value = column._value(value, column, data);\n            }\n\n            return frappe.format(value, column, { always_show_decimals: true }, data);\n        };\n\n        return {\n            id: column.fieldname,\n            field: column.fieldname,\n            name: column.label,\n            content: column.label,\n            editable: false,\n            format,\n            docfield,\n            ...column,\n        };\n    }\n\n    format_data() {\n        if (!Array.isArray(this.data)) {\n            this.data = Object.values(this.data);\n        }\n\n        if (!this.format_row) return;\n\n        this.data = this.data.map(this.format_row);\n    }\n\n    get_checked_items() {\n        const indices = this.datatable.rowmanager.getCheckedRows();\n        return indices.map(index => this.data[index]);\n    }\n\n    clear_checked_items() {\n        const { rowmanager } = this.datatable;\n        rowmanager\n            .getCheckedRows()\n            .map(rowIndex => rowmanager.checkRow(rowIndex, false));\n    }\n\n    render_datatable() {\n        const datatable_options = {\n            dynamicRowHeight: true,\n            checkboxColumn: true,\n            inlineFilters: true,\n            noDataMessage: __(\"No Matching Data Found!\"),\n            // clusterize: false,\n            events: {\n                onCheckRow: () => {\n                    const checked_items = this.get_checked_items();\n                    // this.toggle_actions_menu_button(checked_items.length > 0);\n                },\n            },\n            cellHeight: 34,\n            ...this.options,\n            columns: this.get_dt_columns(),\n            data: this.data,\n        };\n        this.datatable = new frappe.DataTable(this.$wrapper.get(0), datatable_options);\n        this.$datatable = $(`.${this.datatable.style.scopeClass}`);\n    }\n};\n", "frappe.provide(\"india_compliance\");\n\nindia_compliance.set_gstin_options = async function (frm, show_all_option=false) {\n    const { query, params } = india_compliance.get_gstin_query(frm.doc.company);\n    const { message } = await frappe.call({\n        method: query,\n        args: params,\n    });\n\n    if (!message) return [];\n    if (show_all_option) message.unshift(\"All\");\n\n    const gstin_field = frm.get_field(\"company_gstin\");\n    gstin_field.set_data(message);\n    return message;\n}\n", "frappe.provide(\"india_compliance\");\n\nindia_compliance.ViewGroup = class ViewGroup {\n    constructor(options) {\n        Object.assign(this, options);\n        this.views = {};\n        this.render();\n    }\n\n    render() {\n        $(this.$wrapper).append(\n            `\n            <div class= \"view-group\">\n                <div class=\"view-switch\"></div>\n            </div>\n            `\n        );\n\n        this.view_group_container = $(`\n            <ul\n                class= \"nav custom-tabs rounded-sm border d-inline-flex\"\n                id = \"custom-tabs\"\n                role = \"tablist\"\n            ></ul>\n        `).appendTo(this.$wrapper.find(`.view-switch`));\n\n        this.make_views();\n        this.setup_events();\n    }\n\n    set_active_view(view) {\n        this.active_view = view;\n        this.views[`${view}_view`].children().tab(\"show\");\n    }\n\n    make_views() {\n        this.view_names.forEach(view => {\n            this.views[`${view}_view`] = $(\n                `\n                <li class=\"nav-item show\">\n                    <a\n                        class=\"nav-link ${this.active_view === view ? \"active\" : \"\"}\"\n                        id = \"gstr-1-__${view}-view\"\n                        data-toggle=\"tab\"\n                        data-fieldname=\"${view}\"\n                        href=\"#gstr-1-__${view}-view\"\n                        role=\"tab\"\n                        aria-controls=\"gstr-1-__${view}-view\"\n                        aria-selected=\"true\"\n            >\n            ${frappe.unscrub(view)}\n                    </a>\n                </li>\n            `\n            ).appendTo(this.view_group_container);\n        });\n    }\n\n    setup_events() {\n        this.view_group_container.off(\"click\").on(\"click\", \".nav-link\", e => {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            this.target = $(e.currentTarget);\n            const target_view = this.target.attr(\"data-fieldname\");\n\n            this.set_active_view(target_view);\n            this.callback && this.callback(target_view);\n        });\n    }\n\n    disable_view(view, title) {\n        this.views[`${view}_view`].attr(\"title\", title);\n        this.views[`${view}_view`].find(\".nav-link\").addClass(\"disabled\");\n    }\n\n    enable_view(view) {\n        this.views[`${view}_view`].removeAttr(\"title\");\n        this.views[`${view}_view`].find(\".nav-link\").removeClass(\"disabled\");\n    }\n}"],
  "mappings": "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",
  "names": ["column"]
}
